<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ntfs on diecknet</title>
    <link>https://diecknet.de/de/tags/ntfs/</link>
    <description>Recent content in Ntfs on diecknet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Fri, 30 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diecknet.de/de/tags/ntfs/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerShell NTFS Alternate Data Streams</title>
      <link>https://diecknet.de/de/2024/08/30/powershell-ntfs-alternate-data-streams/</link>
      <pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/08/30/powershell-ntfs-alternate-data-streams/</guid>
      <description>Das Dateisystem NTFS wird standardmäßig unter Windows verwendet. Und normalerweise hat eine Datei nur einen dazugehörigen normalen Datenstrom (Data Stream) mit dem Namen :$DATA. Aber es gibt auch die sogenannten &amp;ldquo;Alternate Data Streams&amp;rdquo; (ADS), die zusätzliche Daten enthalten können.
Diese ADS werden teilweise vom System verwendet, könnten aber auch von Angreifern verwendet werden, um Daten zu verstecken.
NTFS Alternate Data Stream auslesen Aus dem Internet heruntergeladene Dateien erhalten bei vielen Browsern unter Windows ein &amp;ldquo;Mark of the web&amp;rdquo; (MOTW) im Zone.</description>
    </item>
    
    <item>
      <title>Dateidatum per PowerShell setzen</title>
      <link>https://diecknet.de/de/2020/09/08/Set-File-Date-with-PowerShell/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/09/08/Set-File-Date-with-PowerShell/</guid>
      <description>Das Datum einer Datei kann beliebig per PowerShell gesetzt beziehungsweise manipuliert werden. Im Screenshot sind beispielhaft ein paar beliebig gesetzte Werte zu sehen. Die Vorgehensweise ist getestet mit Windows PowerShell 5.1.
Per Get-Member kann man sich die Zeit-Attribute einer Datei anzeigen lassen.
1 Get-Item beispiel.txt | Get-Member *time* Interessant sind hier die Attribute:
CreationTime (Wann die Datei erstellt wurde) LastAccessTime (Wann das letzte Mal auf die Datei zugegriffen wurde) LastWriteTime (Wann die Datei zuletzt geändert wurde) Wie hinten am {get;set;} zu erkennen ist, kann man die Attribute auch nicht nur auslesen, sondern auch setzen.</description>
    </item>
    
  </channel>
</rss>
