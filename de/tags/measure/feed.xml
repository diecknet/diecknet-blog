<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Measure on diecknet</title>
    <link>https://diecknet.de/de/tags/measure/</link>
    <description>Recent content in Measure on diecknet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Tue, 12 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diecknet.de/de/tags/measure/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Die Ausf√ºhrungsdauer von PowerShell Code messen</title>
      <link>https://diecknet.de/de/2024/03/12/powershell-measure-execution-time/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/03/12/powershell-measure-execution-time/</guid>
      <description>&lt;p&gt;Wenn ihr euren PowerShell Code auf Geschwindigkeit optimieren wollt, dann macht es Sinn Zeiten zu messen. Es gibt mehrere M√∂glichkeiten um zu messen, wie lange die Ausf√ºhrung von einem St√ºck PowerShell Code dauert.&lt;br&gt;
&lt;strong&gt;üé¨ Ich habe √ºbrigens auch ein &lt;a href=&#34;https://youtu.be/-tpR-KQpPq4&#34; target=&#34;_blank&#34; &gt;Video zu dem Thema erstellt.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;m√∂glichkeit-1-measure-command&#34;&gt;M√∂glichkeit 1: Measure-Command&lt;/h2&gt;
&lt;p&gt;Eine einfache M√∂glichkeit ist das Cmdlet &lt;code&gt;Measure-Command&lt;/code&gt;. Es nimmt einen ScriptBlock entgegen, der dann auch ausgef√ºhrt wird. Und wir erhalten im Anschluss ein Messergebnis in Form eines &lt;code&gt;TimeSpan&lt;/code&gt; Objekts. Ein einfaches Beispiel daf√ºr:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
