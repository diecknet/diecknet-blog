<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Windows on diecknet</title>
    <link>https://diecknet.de/de/tags/windows/</link>
    <description>Recent content in Windows on diecknet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Wed, 28 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diecknet.de/de/tags/windows/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerShell: Zugriff auf Umgebungsvariablen</title>
      <link>https://diecknet.de/de/2024/02/28/powershell-environment-variables/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/02/28/powershell-environment-variables/</guid>
      <description>&lt;p&gt;Per PowerShell auf Umgebungsvariablen zugreifen - das geht ganz einfach.&lt;br&gt;
&lt;strong&gt;üé¨ Ich habe √ºbrigens auch ein &lt;a href=&#34;https://youtu.be/25-jcylahSo&#34; target=&#34;_blank&#34; &gt;Video zu dem Thema erstellt.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;umgebungsvariable-per-env-variable-auslesen&#34;&gt;Umgebungsvariable per &lt;code&gt;$Env:&lt;/code&gt;-Variable auslesen&lt;/h2&gt;
&lt;p&gt;Die einfachste M√∂glichkeit ist per &lt;code&gt;$Env:&lt;/code&gt;-Variable. Gebt daf√ºr einfach &lt;code&gt;$Env&lt;/code&gt; ein, dann einen Doppelpunkt und dann den Namen der Umgebungsvariable von der ihr den Wert auslesen wollt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#41a1c0&#34;&gt;$Env:username&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Dadurch wird der Username des aktuell angemeldeten Users ausgegeben.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://diecknet.de/images/2024/2024-02-28_PowerShell_ENV_1.jpg&#34; &gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://diecknet.de/images/2024/2024-02-28_PowerShell_ENV_1.jpg&#34; alt=&#34;Beispiel Ausgabe von $Env:username in der PowerShell - der aktuelle Username wird angezeigt&#34;  title=&#34;Beispiel Ausgabe von $Env:username in der PowerShell - der aktuelle Username wird angezeigt&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell: √úberpr√ºfen ob Admin-Rechte vorhanden sind</title>
      <link>https://diecknet.de/de/2024/02/20/powershell-check-admin-rights/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/02/20/powershell-check-admin-rights/</guid>
      <description>&lt;p&gt;Wenn ihr ein PowerShell Skript erstellt habt, was Aktionen ausf√ºhren soll, die Adminrechte erfordern, dann k√∂nnt ihr das auch per Code √ºberpr√ºfen. Damit k√∂nnt ihr sicherstellen, dass euer Skript erfolgreich ausgef√ºhrt werden kann. Am einfachsten geht das mit einer &lt;code&gt;Requires&lt;/code&gt;-Anweisung.
&lt;strong&gt;&lt;a href=&#34;https://youtu.be/ACUCARq7joM&#34; target=&#34;_blank&#34; &gt;üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;admin-rechte-per-requires-anweisung-erfordern&#34;&gt;Admin-Rechte per Requires Anweisung erfordern&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6c7986&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#fc5fa3&#34;&gt;Requires&lt;/span&gt; &lt;span style=&#34;color:#fc5fa3&#34;&gt;-RunAsAdministrator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Diese Zeile kann an eine beliebigen Stelle im PowerShell Code eingef√ºgt werden. Ich w√ºrde es immer relativ am Anfang des Skriptes einbauen, damit es gut sichtbar ist. Aber die Position spielt technisch gesehen keine Rolle. Also wenn die &lt;code&gt;#Requires&lt;/code&gt; Anweisung im Code drin steht, wird das vor der richtigen Ausf√ºhrung des gesamten restlichen Codes ausgewertet. Und je nachdem ob Adminrechte vorhanden sind, oder nicht - wird ein Fehler ausgegeben.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell: √úbersetzte Security Identifier Namen herausfinden</title>
      <link>https://diecknet.de/de/2024/01/17/powershell-localized-security-identifiers/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/01/17/powershell-localized-security-identifiers/</guid>
      <description>&lt;p&gt;Security Identifiers sind dazu da, um bestimmte Security Prinzipale oder Gruppen unter Windows zu identifizieren. Leider sind die dazugeh√∂rigen Namen lokalisiert, also sind zum Beispiel in einem deutschsprachigen System anders als in einem englischsprachigen System.&lt;/p&gt;
&lt;p&gt;Beispielsweise hei√üt die eingebaute Administratorgruppe auf Englisch &lt;code&gt;BUILTIN\ADMINISTRATORS&lt;/code&gt; und auf Deutsch &lt;code&gt;VORDEFINIERT\Administratoren&lt;/code&gt;. Oder das Englische &lt;code&gt;NT AUTHORITY\SYSTEM&lt;/code&gt; wird an einem Deutschen System zu &lt;code&gt;NT-AUTORIT√ÑT\SYSTEM&lt;/code&gt;. &lt;strong&gt;Das finde ich richtig abgefahren!&lt;/strong&gt; Da wird auf einmal ein Leerzeichen durch ein Bindestrich ersetzt. Naja was soll&amp;rsquo;s.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
