<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Timespan on diecknet</title>
    <link>https://diecknet.de/de/tags/timespan/</link>
    <description>Recent content in Timespan on diecknet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Tue, 12 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diecknet.de/de/tags/timespan/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Die Ausf√ºhrungsdauer von PowerShell Code messen</title>
      <link>https://diecknet.de/de/2024/03/12/powershell-measure-execution-time/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/03/12/powershell-measure-execution-time/</guid>
      <description>Wenn ihr euren PowerShell Code auf Geschwindigkeit optimieren wollt, dann macht es Sinn Zeiten zu messen. Es gibt mehrere M√∂glichkeiten um zu messen, wie lange die Ausf√ºhrung von einem St√ºck PowerShell Code dauert.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
M√∂glichkeit 1: Measure-Command Eine einfache M√∂glichkeit ist das Cmdlet Measure-Command. Es nimmt einen ScriptBlock entgegen, der dann auch ausgef√ºhrt wird. Und wir erhalten im Anschluss ein Messergebnis in Form eines TimeSpan Objekts.</description>
    </item>
    
  </channel>
</rss>
