<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>diecknet</title>
    <link>https://diecknet.de/de/</link>
    <description>Recent content on diecknet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Fri, 30 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diecknet.de/de/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerShell Calculated Properties</title>
      <link>https://diecknet.de/de/2024/08/21/powershell-calculated-properties/</link>
      <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/08/21/powershell-calculated-properties/</guid>
      <description>Wenn ihr per PowerShell Daten exportiert (zum Beispiel in eine CSV-Datei per Export-CSV), dann werden die originalen Eigenschaftsnamen von den PowerShell Objekten verwendet. Wenn die aber nicht ganz passend f√ºr euren Zweck sind, dann k√∂nnt ihr sie auch anpassen. Daf√ºr k√∂nnen sogenannte &amp;ldquo;Calculcated Properties&amp;rdquo; und das Cmdlet Select-Object verwendet werden.
Damit k√∂nnen zum Beispiel:
Eigenschaften umbenannt werden Eigenschaftswerte formatiert werden Komplett eigene Eigenschaften erzeugt werden (z.B. durch den Aufruf zus√§tzlicher Cmdlets) Ich habe zu diesem Thema auch ein Video auf meinem YouTube Kanal ver√∂ffentlicht.</description>
    </item>
    
    <item>
      <title>PowerShell Write-Host VS. Write-Output</title>
      <link>https://diecknet.de/de/2024/07/05/powershell-write-host-vs-write-output/</link>
      <pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/07/05/powershell-write-host-vs-write-output/</guid>
      <description>In PowerShell k√∂nnt ihr ja Text mit dem Cmdlet Write-Host ausgeben. Aber es wird teilweise davon abgeraten das zu verwenden. Es gibt zum Beispiel die Alternative Write-Output. In diesem Post erkl√§re ich euch die Unterschiede.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
Write-Host Write-Host gibt Daten auf dem PowerShell Host aus, dem Programm, welches die aktuelle PowerShell Sitzung hostet. Oft ist das der ConsoleHost, aber z.B. die PowerShell ISE oder Visual Studio Code verwenden eigene Hosts, die sich in manchen Aspekten voneinander unterscheiden.</description>
    </item>
    
    <item>
      <title>Per PowerShell .zip-Archive erstellen und entpacken</title>
      <link>https://diecknet.de/de/2024/06/08/powershell-zip/</link>
      <pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/06/08/powershell-zip/</guid>
      <description>Windows kann eigentlich schon ziemlich lange mit ZIP-Archiven umgehen. Und auch die PowerShell kann das, also sowohl ZIP-Dateien erstellen, als auch sie entpacken. Das kann n√ºtzlich sein, wenn ihr z.B. mit einem PowerShell Skript mehrere Dateien zu einer ZIP-Datei zusammenfassen wollt - das erleichtert das wegkopieren. Oder vielleicht um eine per Skript aus dem Internet geladene ZIP-Datei zu extrahieren.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.</description>
    </item>
    
    <item>
      <title>PowerShell Befehle auf mehrere Zeilen aufteilen</title>
      <link>https://diecknet.de/de/2024/05/15/powershell-multiline-commands/</link>
      <pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/05/15/powershell-multiline-commands/</guid>
      <description>PowerShell Befehle mit vielen Parametern k√∂nnen die Lesbarkeit vom Code verschlechtern. Zum Beispiel habe ich im nachfolgenden Codeabschnitt in Zeile 5 das Cmdlet New-ADUser verwendet und dabei 7 Parameter angegeben. Das ist sehr schwer auf einer Zeile zu lesen, selbst wenn ihr einen Ultra-Wide Monitor verwendet.
1 2 3 4 5 6 $CSVFile = Import-Csv .\NeueUser.csv foreach($User in $CSVFile) { $Manager = Get-ADUser -Filter &amp;#34;mail -eq &amp;#39;$($User.Manager)&amp;#39;&amp;#34; New-ADUser -Name &amp;#34;$($User.Vorname) $($User.</description>
    </item>
    
    <item>
      <title>NULL in PowerShell</title>
      <link>https://diecknet.de/de/2024/04/29/powershell-null/</link>
      <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/04/29/powershell-null/</guid>
      <description>Wenn ihr in PowerShell pr√ºfen wollt, ob ein Wert nicht gesetzt ist, dann k√∂nnt ihr einen Vergleich mit $null machen. Diese automatische Variable bedeutet immer null, nichts, kein Wert. Das ist aber etwas anderes, als wenn ihr einfach Anf√ºhrungszeichen &amp;quot;&amp;quot; nehmt und dann nichts reinschreibt. Zum Beispiel ergibt das hier immer FALSE:
1 2 3 4 5 $null -eq &amp;#34;&amp;#34; # = false $null -eq &amp;#39;&amp;#39; # = false # Hat √ºbrigens nichts mit der Zahl 0 zu tun // also das ergibt auch False $null -eq 0 # = false üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.</description>
    </item>
    
    <item>
      <title>PowerShell Skripte remote entwickeln</title>
      <link>https://diecknet.de/de/2024/04/23/powershell-remote-script-development/</link>
      <pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/04/23/powershell-remote-script-development/</guid>
      <description>Es ist m√∂glich PowerShell Skripte remote zu entwickeln. Also das Skript wird auf einem remote Computer gespeichert und ausgef√ºhrt, aber die Eingabe erfolgt im lokalen Editor-Tool. Das geht sowohl mit der klassischen Windows PowerShell ISE, als auch mit Visual Studio Code. In VSCode k√∂nnt ihr sowohl mit remote Windows PowerShell, als auch remote PowerShell 7 Systemen arbeiten. üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
Windows PowerShell ISE Die Windows PowerShell ISE unterst√ºtzt nur remote Windows Systeme mit Windows PowerShell.</description>
    </item>
    
    <item>
      <title>PowerShell Ausgabe unterdr√ºcken</title>
      <link>https://diecknet.de/de/2024/04/09/powershell-suppress-output/</link>
      <pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/04/09/powershell-suppress-output/</guid>
      <description>Manchmal geben PowerShell Befehle eine R√ºckmeldung aus, obwohl uns das gar nicht interessiert. Es gibt verschiedene Szenarien, wie ihr die Ausgaben unterdr√ºcken k√∂nnt.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
Ich verwende hier zum Beispiel das Cmdlet New-NetFirewallRule mit dem ich eine neue Regel in der Windows Firewall hinzuf√ºgen kann:
1 New-NetFirewallRule -DisplayName &amp;#34;Ausgehende Verbindungen zu Port 443 blockieren&amp;#34; -Direction Outbound -RemotePort 443 -Protocol TCP -Action Block Wenn ich das ausf√ºhre, dann kriege ich als R√ºckgabe ein Objekt, welches die Firewall Regel repr√§sentiert.</description>
    </item>
    
    <item>
      <title>PowerShell Dot Sourcing</title>
      <link>https://diecknet.de/de/2024/03/26/powershell-dot-sourcing/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/03/26/powershell-dot-sourcing/</guid>
      <description>Mit PowerShell Dot Sourcing k√∂nnt ihr eine Skriptdatei in eure PowerShell Session importieren. Das Skript wird erstmal normal ausgef√ºhrt, aber gesetzte Variablen, erstellte Funktionen und so weiter sind dann in der Session verf√ºgbar. Bei einem normalen Skript-Aufruf ist das sonst nicht der Fall. Mich erinnert das immer an den PHP-Befehl include, weil ich in meiner Jugend mit PHP rumgedaddelt habe üòÖ
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.</description>
    </item>
    
    <item>
      <title>Regular Expressions in PowerShell</title>
      <link>https://diecknet.de/de/2024/03/19/powershell-regex/</link>
      <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/03/19/powershell-regex/</guid>
      <description>Regular Expressions sind Muster mit denen Texte verglichen werden k√∂nnen oder auch Infos aus Texten extrahiert werden k√∂nnen. Zum Beispiel k√∂nnt ihr damit √ºberpr√ºfen, ob eine Logdatei von einem Programm die Zeichenfolge &amp;ldquo;Error&amp;rdquo; enth√§lt (also um zu pr√ºfen, ob ein Fehler aufgetreten ist). Oder um einfach nur zu schauen, ob eine Zeichenkette einem bestimmten Muster entspricht, zum Beispiel einer E-Mail Adresse.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.</description>
    </item>
    
    <item>
      <title>Die Ausf√ºhrungsdauer von PowerShell Code messen</title>
      <link>https://diecknet.de/de/2024/03/12/powershell-measure-execution-time/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/03/12/powershell-measure-execution-time/</guid>
      <description>Wenn ihr euren PowerShell Code auf Geschwindigkeit optimieren wollt, dann macht es Sinn Zeiten zu messen. Es gibt mehrere M√∂glichkeiten um zu messen, wie lange die Ausf√ºhrung von einem St√ºck PowerShell Code dauert.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
M√∂glichkeit 1: Measure-Command Eine einfache M√∂glichkeit ist das Cmdlet Measure-Command. Es nimmt einen ScriptBlock entgegen, der dann auch ausgef√ºhrt wird. Und wir erhalten im Anschluss ein Messergebnis in Form eines TimeSpan Objekts.</description>
    </item>
    
    <item>
      <title>PowerShell Profile erkl√§rt (mit Beispielen)</title>
      <link>https://diecknet.de/de/2024/03/05/powershell-profiles/</link>
      <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/03/05/powershell-profiles/</guid>
      <description>Mit PowerShell Profilen k√∂nnt ihr eure PowerShell anpassen. Also zum Beispiel, dass sie so aussieht:
Oder ihr k√∂nnt einstellen, dass beim Start so ein Splash-Screen angezeigt (winfetch) wird:
Oder ihr k√∂nnt auch eigene Funktionen und Variablen hinterlegen, sodass diese immer sofort verf√ºgbar sind, wenn ihr die PowerShell startet.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
Letztendlich ist ein PowerShell Profil einfach ein PowerShell Skript, was automatisch ausgef√ºhrt wird, wenn ihr die PowerShell startet.</description>
    </item>
    
    <item>
      <title>PowerShell: Zugriff auf Umgebungsvariablen</title>
      <link>https://diecknet.de/de/2024/02/28/powershell-environment-variables/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/02/28/powershell-environment-variables/</guid>
      <description>Per PowerShell auf Umgebungsvariablen zugreifen - das geht ganz einfach.
üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
Umgebungsvariable per $Env:-Variable auslesen Die einfachste M√∂glichkeit ist per $Env:-Variable. Gebt daf√ºr einfach $Env ein, dann einen Doppelpunkt und dann den Namen der Umgebungsvariable von der ihr den Wert auslesen wollt.
1 $Env:username Dadurch wird der Username des aktuell angemeldeten Users ausgegeben.
Das funktioniert √ºbrigens plattform√ºbergreifend, also auch zum Beispiel unter Linux.</description>
    </item>
    
    <item>
      <title>PowerShell: √úberpr√ºfen ob Admin-Rechte vorhanden sind</title>
      <link>https://diecknet.de/de/2024/02/20/powershell-check-admin-rights/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/02/20/powershell-check-admin-rights/</guid>
      <description>Wenn ihr ein PowerShell Skript erstellt habt, was Aktionen ausf√ºhren soll, die Adminrechte erfordern, dann k√∂nnt ihr das auch per Code √ºberpr√ºfen. Damit k√∂nnt ihr sicherstellen, dass euer Skript erfolgreich ausgef√ºhrt werden kann. Am einfachsten geht das mit einer Requires-Anweisung. üé¨ Ich habe √ºbrigens auch ein Video zu dem Thema erstellt.
Admin-Rechte per Requires Anweisung erfordern 1 #Requires -RunAsAdministrator Diese Zeile kann an eine beliebigen Stelle im PowerShell Code eingef√ºgt werden.</description>
    </item>
    
    <item>
      <title>PowerShell: √úbersetzte Security Identifier Namen herausfinden</title>
      <link>https://diecknet.de/de/2024/01/17/powershell-localized-security-identifiers/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2024/01/17/powershell-localized-security-identifiers/</guid>
      <description>Security Identifiers sind dazu da, um bestimmte Security Prinzipale oder Gruppen unter Windows zu identifizieren. Leider sind die dazugeh√∂rigen Namen lokalisiert, also sind zum Beispiel in einem deutschsprachigen System anders als in einem englischsprachigen System.
Beispielsweise hei√üt die eingebaute Administratorgruppe auf Englisch BUILTIN\ADMINISTRATORS und auf Deutsch VORDEFINIERT\Administratoren. Oder das Englische NT AUTHORITY\SYSTEM wird an einem Deutschen System zu NT-AUTORIT√ÑT\SYSTEM. Das finde ich richtig abgefahren! Da wird auf einmal ein Leerzeichen durch ein Bindestrich ersetzt.</description>
    </item>
    
    <item>
      <title>Die unterschiedlichen Klammern in der PowerShell</title>
      <link>https://diecknet.de/de/2023/11/28/powershell-brackets/</link>
      <pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2023/11/28/powershell-brackets/</guid>
      <description>Wann ist welche Klammer die Richtige in der PowerShell?
# Verschiedene Klammern in der PowerShell () {} [] Die Klammern haben unterschiedliche Einsatzzwecke. Die Gr√∂√üer-als &amp;lt; und Kleiner-als &amp;gt; Zeichen w√ºrde ich √ºbrigens nicht zu den Klammern z√§hlen. F√ºr alle echten Klammern gilt: Wenn ihr eine Klammer ge√∂ffnet habt, m√ºsst ihr sie auch wieder schlie√üen.
Runde Klammern ( ) Mit runden Klammern wird in der PowerShell ein Ausdruck bzw. ein Befehl umfasst, bzw.</description>
    </item>
    
    <item>
      <title>PowerShell ConstrainedLanguage Mode per Gruppenrichtlinie einstellen</title>
      <link>https://diecknet.de/de/2023/05/20/powershell-constrainedlanguage-mode-per-gpo/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2023/05/20/powershell-constrainedlanguage-mode-per-gpo/</guid>
      <description>PowerShell Language Modes sind eine M√∂glichkeit die Funktionalit√§t der PowerShell einzuschr√§nken, um die Sicherheit eines Systems zu erh√∂hen. Das ist nat√ºrlich nur ein kleiner Baustein in einer gr√∂√üeren Sicherheitsstrategie, also das alleine ist noch kein ausreichender Schutz f√ºr ein System.
Gleichzeitig ist das auch ein zweischneidiges Schwert:
Vorteil: Wir entziehen potenziellen Angreifern ein m√§chtiges Werkzeug.
Nachteil: Wir selbst als Administratoren k√∂nnen die PowerShell an einem System auch nicht mehr richtig nutzen.</description>
    </item>
    
    <item>
      <title>Synchronisierte Exchange Objekte ohne Exchange Server verwalten</title>
      <link>https://diecknet.de/de/2023/04/12/exchange-hybrid-without-ever-having-an-exchange-server/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2023/04/12/exchange-hybrid-without-ever-having-an-exchange-server/</guid>
      <description>Es ist ja schon seit einiger Zeit m√∂glich, die Exchange Server Verwaltungstools ohne einen vollst√§ndigen Exchange Server zu verwenden. Die meisten Anleitungen gehen davon aus, dass schon mindestens ein Exchange Server vorhanden war und dieser dann entfernt wird. Und die Microsoft Dokumentation verweist nur am Rande auf das Thema und erkl√§rt nicht wirklich.
In diesem Post gehe ich auf ein Szenario ein, was vorallem viele kleinere Unternehmen betrifft: Im Microsoft 365 Admin Center wird angezeigt:</description>
    </item>
    
    <item>
      <title>Exchange Online per Azure Automation steuern im Jahr 2024</title>
      <link>https://diecknet.de/de/2023/01/09/Exchange-Online-per-Azure-Automation/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2023/01/09/Exchange-Online-per-Azure-Automation/</guid>
      <description>Wenn ihr Exchange Online per Azure Automation steuern wollt, dann ist Managed Identities was ihr benutzen solltet (diese Aussage wurde zuletzt gepr√ºft im Juni 2024).
Legacy Ansatz Fr√ºher wurden daf√ºr auch gerne RunAs Accounts oder Plaintext Credentials (ü§¢) verwendet, aber das gilt mittlerweile als veraltet. RunAs Accounts sind zum Herbst 2023 abgek√ºndigt und zu Klartext-Kennw√∂rtern muss ich nix sagen, oder? Eventuell bieten sich noch App Registrierungen in Entra ID an, aber wenn ihr wirklich einfach nur per Azure Automation ein paar Exchange Online Einstellungen automatisieren wollt, ist das eigentlich nicht notwendig.</description>
    </item>
    
    <item>
      <title>Microsoft Teams PowerShell: Authentifizierungsfehler/ActiveX-Steuerelement kann nicht instanziiert werden</title>
      <link>https://diecknet.de/de/2022/06/13/Connect-MicrosoftTeams-Authentifizierungsfehler-ActiveX/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2022/06/13/Connect-MicrosoftTeams-Authentifizierungsfehler-ActiveX/</guid>
      <description>Ich habe heute einen merkw√ºrdigen Fehler beim Verbinden mit der Teams PowerShell erhalten. Ich notiere das hier kurz, da ich nach 15 Sekunden Internetrecherche keine L√∂sung dazu gefunden habe üòá. Alles was ich dazu spontan gefunden hatte, hatte nichts mit Teams zu tun.
Ich wollte mich einfach nur per Connect-MicrosoftTeams mit der Microsoft Teams Administration per PowerShell verbinden. Ohne Angabe irgendwelcher weiteren Parameter, einfach ganz normal mit einem personalisierten Adminkonto anmelden und dann MFA best√§tigen und so weiter.</description>
    </item>
    
    <item>
      <title>Outlook Cache Modus f√ºr Freigegebene Postf√§cher</title>
      <link>https://diecknet.de/de/2021/11/19/Exchange-Online-Cache-Mode-Shared-Mailboxes/</link>
      <pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2021/11/19/Exchange-Online-Cache-Mode-Shared-Mailboxes/</guid>
      <description>In neueren Microsoft Outlook Versionen es ist nicht mehr m√∂glich, im Cache Modus f√ºr freigegebene Postf√§cher weitere E-Mails abzurufen. Stattdessen wird am Ende der E-Mail-Liste folgender Hinweis angezeigt:
Es sind weitere Elemente in diesem Ordner auf dem Server vorhanden.
Verbindung mit dem Server herstellen, um diese anzuzeigen
In pers√∂nlichen Postf√§chern wird stattdessen die M√∂glichkeit geboten, weitere Elemente vom Server abzurufen. Der Text dazu wurde st√ºmperhaft automatisch √ºbersetzt, was sich gut ins Gesamtbild f√ºgt:</description>
    </item>
    
    <item>
      <title>Einwahlrufnummer f√ºr Teams Meetings per PowerShell setzen</title>
      <link>https://diecknet.de/de/2021/10/05/Set-Teams-Meeting-Dialin-number-powershell/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2021/10/05/Set-Teams-Meeting-Dialin-number-powershell/</guid>
      <description>Mit Microsoft Teams Audio Conferencing (Microsoft 365-Audiokonferenz) Lizenzen ist es m√∂glich, Einwahlrufnummern f√ºr Teams Besprechungen zu verwenden. Die Lizenz wird f√ºr jeden Benutzer ben√∂tigt, der zu Teams Meetings mit Einwahlrufnummer einladen soll.
Die Einwahlrufnummer in der Meeting-Einladung basiert auf dem UsageLocation Attribut des Benutzers - einmalig wenn der Benutzer f√ºr Audiokonferenz aktiviert wird. Also selbst wenn ihr eine falsche UsageLocation korrigiert, hat der Benutzer noch eine alte Einwahlrufnummer zugewiesen.
Teams Admin Center verwenden um die Einwahlrufnummer f√ºr einzelne Benutzer zu √§ndern Users ‚ûî Manage Users ‚ûî Auf einen Benutzer klicken ‚ûî Auf &amp;ldquo;Edit&amp;rdquo; klicken (neben &amp;ldquo;Audio Conferencing&amp;rdquo;) ‚ûî Ausw√§hlen der &amp;ldquo;Toll number&amp;rdquo; entsprechend des Benutzerstandorts.</description>
    </item>
    
    <item>
      <title>Wie lange werden gel√∂schte Teams Kan√§le aufbewahrt?</title>
      <link>https://diecknet.de/de/2021/06/29/Deleted-Teams-Channel-Retention/</link>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2021/06/29/Deleted-Teams-Channel-Retention/</guid>
      <description>Falls ihr euch fragt &amp;ldquo;Wie lange wird ein gel√∂schter Teams Kanal aufbewahrt?&amp;rdquo; oder &amp;ldquo;F√ºr wie lange kann ich einen gel√∂schten Teams Kanal wiederherstellen?&amp;rdquo;, findet ihr die Antwort relativ schnell. Aber meistens fehlt der Verweis auf die original Quelle in der Microsoft Dokumentation.
Antwort Gel√∂schte Teams Kan√§le werden f√ºr 30 Tage aufbewahrt.
Offizielle Quelle Im englischsprachigen Original https://docs.microsoft.com/en-us/microsoftteams/limits-specifications-teams#teams-and-channels wird unterhalb der Tabelle Teams and channels in Fu√ünote 4 festgehalten:
Deleted channels can be restored within 30 days.</description>
    </item>
    
    <item>
      <title>Microsoft Teams: Benutzerdefinierte Hintergr√ºnde deaktivieren</title>
      <link>https://diecknet.de/de/2021/02/25/MSTeams-Disable-Custom-Backgrounds/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2021/02/25/MSTeams-Disable-Custom-Backgrounds/</guid>
      <description>Nachdem Microsoft virtuelle Hintergr√ºnde f√ºr MS Teams Besprechungen eingef√ºhrt hat, habe ich einige interessante Hintergrundbilder in Meetings gesehen. Trotzdem ist es meiner Meinung nach nicht notwendig, die freie Auswahl von Hintergr√ºnden zu verbieten. Da dies jedoch von Unternehmen zu Unternehmen unterschiedlich gehandhabt wird, beschreibe ich hier die Konfigurationsm√∂glichkeiten. Zur Einschr√§nkung der Hintergrundauswahl kann eine Besprechungsrichtline verwendet werden.
M√∂glichkeiten zur Konfiguration Die Option &amp;ldquo;VideoFiltersMode&amp;rdquo; kann zur Zeit nur per PowerShell gesetzt werden - nicht per Teams Admin Center.</description>
    </item>
    
    <item>
      <title>Microsoft 365 Self Service Purchase Lizenzen</title>
      <link>https://diecknet.de/de/2020/12/01/M365-Self-Service-Purchase/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/12/01/M365-Self-Service-Purchase/</guid>
      <description>Seit ca. Ende des Jahres 2019 hat Microsoft die Self Service Purchase Lizenzen f√ºr Microsoft 365 eingef√ºhrt. Durch diese neue Funktion k√∂nnen Endanwender in einem Office 365 Tenant selbstst√§ndig Lizenzen f√ºr einige Produkte kaufen. Mit dem Stand 2020-12-01 sind dies folgende Produkte:
Power Apps per user Power Automate per user Power Automate RPA Power BI Pro Power BI Premium (standalone) Project Plan 1 Project Plan 3 Visio Plan 1 Visio Plan 2 Erkl√§rungsvideo Ich habe den Lizenzkauf als Anwender ausprobiert und dokumentiert.</description>
    </item>
    
    <item>
      <title>Dateidatum per PowerShell setzen</title>
      <link>https://diecknet.de/de/2020/09/08/Set-File-Date-with-PowerShell/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/09/08/Set-File-Date-with-PowerShell/</guid>
      <description>Das Datum einer Datei kann beliebig per PowerShell gesetzt beziehungsweise manipuliert werden. Im Screenshot sind beispielhaft ein paar beliebig gesetzte Werte zu sehen. Die Vorgehensweise ist getestet mit Windows PowerShell 5.1.
Per Get-Member kann man sich die Zeit-Attribute einer Datei anzeigen lassen.
1 Get-Item beispiel.txt | Get-Member *time* Interessant sind hier die Attribute:
CreationTime (Wann die Datei erstellt wurde) LastAccessTime (Wann das letzte Mal auf die Datei zugegriffen wurde) LastWriteTime (Wann die Datei zuletzt ge√§ndert wurde) Wie hinten am {get;set;} zu erkennen ist, kann man die Attribute auch nicht nur auslesen, sondern auch setzen.</description>
    </item>
    
    <item>
      <title>Azure AD Connect installieren (Video)</title>
      <link>https://diecknet.de/de/2020/06/23/Azure-AD-Connect-Video-Part2/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/06/23/Azure-AD-Connect-Video-Part2/</guid>
      <description>Ich habe ein YouTube Video √ºber die Konfiguration von Azure AD Connect und die Password Hash Sync erstellt. In diesem Blog-Post verweise ich nur auf ein paar weiterf√ºhrende Links. Schaut euch auch das vorherige Video zur Planung und Vorbereitung von Azure AD Connect an!
Weiterf√ºhrende Links Download Azure AD Connect: Azure AD Connect Download (Microsoft.com) Diecknet Blog post: Azure AD Connect richtig planen und vorbereiten YouTube Video: Azure AD Connect richtig planen und vorbereiten Hardware Anforderungen f√ºr Azure AD Connect Server: Prerequisites for Azure AD Connect - Hardware requirements for Azure AD Connect (docs.</description>
    </item>
    
    <item>
      <title>Office 365 Trial Lizenzen</title>
      <link>https://diecknet.de/de/2020/06/10/Office-365-Trials/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/06/10/Office-365-Trials/</guid>
      <description>Zum Ausprobieren von Office 365 bzw. Microsoft 365 k√∂nnen diverse kostenlose Trial-Lizenzen genutzt werden. Hierbei kann man sich einen kostenlosen Tenant erstellen, oder die Test-Lizenz in einem bestehenden Tenant aktivieren. In der Regel startet dann eine 30 Tage Testphase mit jeweils 25 Benutzerlizenzen. Die Testphase kann einmal kostenlos um weitere 30 Tage verl√§ngert werden. Nach Ablauf der Testphase kann der Tenant gel√∂scht werden. Alternativ k√∂nnen passende Lizenzen gekauft werden, um die Dienste weiter zu nutzen.</description>
    </item>
    
    <item>
      <title>Azure AD Connect richtig planen und vorbereiten (Video)</title>
      <link>https://diecknet.de/de/2020/06/05/Azure-AD-Connect-Video/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/06/05/Azure-AD-Connect-Video/</guid>
      <description>Die Planung und Vorbereitung von Azure AD Connect ist wichtig. Ich habe zu dem Thema ein YouTube Video erstellt. In diesem Artikel verlinke ich die wichtigsten Quellen und Dokumentationsartikel. Au√üerdem habe ich einen Entscheidungsbaum f√ºr das Finden der richtigen Azure AD Connect Architektur erstellt.
Azure AD Connect Entscheidungsbaum Kostenloser Download (.pdf, .png, .drawio)
Weiterf√ºhrende Links Unterst√ºtzte und nicht unterst√ºtzte Azure AD Connect Topologien: Topologies for Azure AD Connect (docs.microsoft.com) Hardware Anforderungen f√ºr Azure AD Connect Server: Prerequisites for Azure AD Connect - Hardware requirements for Azure AD Connect (docs.</description>
    </item>
    
    <item>
      <title>Exchange Online: Apple Internet Accounts - Administratorgenehmigung erforderlich</title>
      <link>https://diecknet.de/de/2020/05/10/Apple-Internet-Accounts-Office365/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/05/10/Apple-Internet-Accounts-Office365/</guid>
      <description>Als sich der erste User mit seinem iPhone an Office 365 angemeldet hat, um seine Kontakte und Kalender zu synchronisieren, wurde ihm folgende Meldung angezeigt:
Administratorgenehmigung erforderlich
Apple Internet Accounts
Apple Internet Accounts ben√∂tigt, um auf Ressourcen in Ihrer Organisation zugreifen zu k√∂nnen, eine Berechtigung, die nur ein Administrator erteilen kann. Bitten Sie einen Administrator, die Berechtigung f√ºr diese App zu erteilen, damit Sie die App verwenden k√∂nnen.
Die App hie√ü fr√ºher √ºbrigens &amp;ldquo;iOS Accounts&amp;rdquo; und wurde anscheinend Anfang 2020 umbenannt.</description>
    </item>
    
    <item>
      <title>Exchange Hybrid: HCW8064 OAuth konnte nicht eingerichtet werden</title>
      <link>https://diecknet.de/de/2020/05/01/Exchange-Hybrid-HCW8064-OAuth/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/05/01/Exchange-Hybrid-HCW8064-OAuth/</guid>
      <description>Zum Abschluss des Hybrid Configuration Wizard (HCW) wurde mir folgende Warnungs-Meldung angezeigt:
HCW8064 - Der Assistent f√ºr Hybridkonfiguration wurde abgeschlossen, er konnte den OAuth-Anteil der Hybridkonfiguration aber nicht ausf√ºhren. Wenn Sie Features ben√∂tigen, die OAuth voraussetzen, k√∂nnen Sie versuchen den Assistenten f√ºr Hybridkonfiguration erneut auszuf√ºhren oder OAuth mithilfe dieser manuellen Schritte manuell konfigurieren.
Der Link &amp;ldquo;Weitere Informationen&amp;rdquo; verweist auf https://support.microsoft.com/en-us/help/3089172/hcw-has-completed-but-was-not-able-to-perform-the-oauth-portion-of-you. Wenn man schaut, wof√ºr OAuth verwendet, wird dieser Artikel referenziert. Dort ist zu lesen, OAuth f√ºr Cross-Premises eDiscovery Suchen ben√∂tigt wird.</description>
    </item>
    
    <item>
      <title>Exchange - Wann wurde das Postfach WIRKLICH erstellt?</title>
      <link>https://diecknet.de/de/2020/01/25/Exchange-Mailbox-Creation-Date/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/01/25/Exchange-Mailbox-Creation-Date/</guid>
      <description>Wenn du herausfinden m√∂chtest, wann ein Exchange Postfach erstellt wurde, wirst du wahrscheinlich √ºber das Active Directory-Benutzer Attribut MSExchWhenMailboxCreated stolpern. Um den Wert auszulesen, kannst du PowerShell oder Active Directory-Benutzer und -Computer (ADUC) verwenden.
1 Get-ADUser -Properties MSExchMaiboxWhenCreated MSExchWhenMailboxCreated enth√§lt nicht die ganze Wahrheit Das k√∂nnte schon das Ende der Geschichte sein. ABER das Attribut ist nicht, was du vielleicht denkst. Das Attribut wird nur propagiert wenn der Benutzer DAS ERSTE MAL ein Postfach erh√§lt.</description>
    </item>
    
    <item>
      <title>Exchange Raumpostfach - Berechtigungen setzen</title>
      <link>https://diecknet.de/de/2020/01/15/Exchange-Room-Mailbox-Standard-Permissions/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2020/01/15/Exchange-Room-Mailbox-Standard-Permissions/</guid>
      <description>Zugriff wurde f√ºr den Benutzer verweigert. - Exchange Raumpostfach Berechtigungen (Outlook Fenster)
Standardm√§√üig hat der &amp;ldquo;Kalender&amp;rdquo;-Ordner von Exchange 2013 Raumpostf√§cher die Berechtigung &amp;ldquo;LimitedDetails&amp;rdquo; f√ºr das Sicherheitsprinzipal &amp;ldquo;Standard&amp;rdquo;. Wenn also keine weiteren Berechtigungen konfiguriert sind, k√∂nnen die Anwender keine Details f√ºr Termine in diesem Raum anzeigen. F√ºr eine bessere Bedienbarkeit in Outlook ist die Berechtigung &amp;ldquo;Reviewer&amp;rdquo; besser geeignet. Hierdurch d√ºrfen Elemente aufgelistet und Details angezeigt werden. Bei Bedarf kann noch das CalendarProcessing angepasst werden, sodass Details wie Beschreibung und Betreff des Termins nicht im Raumpostfach gespeichert werden.</description>
    </item>
    
    <item>
      <title>Outlook Zertifikatswarnung nach Office 365 Migration</title>
      <link>https://diecknet.de/de/2019/12/18/Outlook-Certificate-Warning-after-Office-365-Migration/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2019/12/18/Outlook-Certificate-Warning-after-Office-365-Migration/</guid>
      <description>Outlook Zertifikatswarnung nach Office 365 Migration
Security Alert: svr1.example.com
&amp;hellip;
The security certificate has expired or is not valid yet]
Ich habe k√ºrzlich eine Anfrage von einem Kunden erhalten, der nach seiner Office 365 Migration noch Zertifikatswarnungen (Zertifikat abgelaufen) f√ºr den alten Exchange Server erhalten hat. Da ich bei der Migration nicht involviert war, musste ich mir erstmal einen √úberblick verschaffen:
Der On-Premise Exchange Server 2010 war noch vorhanden - logisch, sonst w√§re wohl kaum eine Zertifikatswarnung erschienen.</description>
    </item>
    
    <item>
      <title>Ein neuer Blog</title>
      <link>https://diecknet.de/de/2019/10/21/new-blog/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/de/2019/10/21/new-blog/</guid>
      <description>Ungef√§hr so ist die Unterhaltung abgelaufen, als ich der ersten Person von meinem Blog-Vorhaben erz√§hlt habe:
B: Dein Handy klingelt&amp;hellip;
A: Oh, was? tippt auf das Handy &amp;hellip;
B: 2001 hat angerufen und will seinen Blog zur√ºck!
A: &amp;hellip;
Nun ja&amp;hellip;
Das WARUM Nicht erst seit ich professionell in der IT-Welt arbeite, wei√ü ich, dass die L√∂sung zu vielen IT-Problemen oft nur eine Google Suche entfernt ist. Bei komplizierten F√§llen muss man manchmal allerdings l√§nger recherchieren&amp;hellip; In den Jahren habe ich immer mal wieder interessante Perspektiven und L√∂sungsans√§tze im Netz gefunden, die mir dabei geholfen haben weiter zu kommen.</description>
    </item>
    
    
    
    
    
  </channel>
</rss>
