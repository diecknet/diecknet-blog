<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Powershell on diecknet</title>
    <link>https://diecknet.de/en/tags/powershell/</link>
    <description>Recent content in Powershell on diecknet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://diecknet.de/en/tags/powershell/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrieve infos about Active Directory Based Activation via PowerShell</title>
      <link>https://diecknet.de/en/2024/11/25/powershell-show-adba-infos/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2024/11/25/powershell-show-adba-infos/</guid>
      <description>&lt;p&gt;If you quickly want to retrieve infos about Active Directory Based Activation (ADBA) in your domain, you can use this PowerShell One-liner:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d0a8ff&#34;&gt;Get-ADDomain&lt;/span&gt; | %{&lt;span style=&#34;color:#d0a8ff&#34;&gt;Get-ADObject&lt;/span&gt; -SearchBase &lt;span style=&#34;color:#fc6a5d&#34;&gt;&amp;#34;CN=Activation Objects,CN=Microsoft SPP,CN=Services,CN=Configuration,&lt;/span&gt;$(&lt;span style=&#34;color:#41a1c0&#34;&gt;$_&lt;/span&gt;.DistinguishedName)&lt;span style=&#34;color:#fc6a5d&#34;&gt;&amp;#34;&lt;/span&gt; -LDAPFilter &lt;span style=&#34;color:#fc6a5d&#34;&gt;&amp;#34;(objectclass=msspp-activationobject)&amp;#34;&lt;/span&gt; -Properties * -ErrorAction SilentlyContinue | &lt;span style=&#34;color:#d0a8ff&#34;&gt;fl &lt;/span&gt;displayName,DistinguishedName,Name,&lt;span style=&#34;color:#d0a8ff&#34;&gt;msspp-csvlkpartialproductkey&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    
    <item>
      <title>PowerShell NTFS Alternate Data Streams</title>
      <link>https://diecknet.de/en/2024/08/30/powershell-ntfs-alternate-data-streams/</link>
      <pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2024/08/30/powershell-ntfs-alternate-data-streams/</guid>
      <description>&lt;p&gt;The NTFS file system is used by default in Windows. And normally a file has only one associated normal data stream with the name &lt;code&gt;:$DATA&lt;/code&gt;. But there are also the so-called &amp;ldquo;Alternate Data Streams&amp;rdquo; (ADS), which can contain additional data. These ADS are not visible in the Windows Explorer or most other applications.&lt;/p&gt;
&lt;p&gt;ADS are sometimes used by the system, but could also be used by attackers to hide data.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell Calculated Properties</title>
      <link>https://diecknet.de/en/2024/08/21/powershell-calculated-properties/</link>
      <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2024/08/21/powershell-calculated-properties/</guid>
      <description>&lt;p&gt;If you export data via PowerShell (for example to a CSV file via &lt;code&gt;Export-CSV&lt;/code&gt;), the original property names of the PowerShell objects are used. However, if these are not fully fitting for your purpose, you can also customize them. So-called &amp;ldquo;Calculated Properties&amp;rdquo; and the cmdlet &lt;code&gt;Select-Object&lt;/code&gt; can be used for this.&lt;/p&gt;
&lt;p&gt;This can be used, for example, to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rename properties&lt;/li&gt;
&lt;li&gt;Format property values&lt;/li&gt;
&lt;li&gt;Create completely custom properties (e.g. by calling additional cmdlets)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;output-objects-normally&#34;&gt;Output objects normally&lt;/h2&gt;
&lt;p&gt;As a reminder: The selection of object properties with &lt;code&gt;Select-Object&lt;/code&gt; is possible with the &lt;code&gt;-Property&lt;/code&gt; parameter. However, the parameter usually does not have to be named explicitly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell: Filter Active Directory Computers</title>
      <link>https://diecknet.de/en/2024/08/07/powershell-active-directory-computers-filtering/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2024/08/07/powershell-active-directory-computers-filtering/</guid>
      <description>&lt;p&gt;I recently worked on a client project, where I had to do some work around Active Directory Computers. I used PowerShell and some light filtering and processing. And now I share those examples, and hopefully someone finds them interesting or helpful. Maybe it will be me, who finds it interesting in the future. In that case: Moin Andi! ðŸ‘‹&lt;/p&gt;
&lt;h2 id=&#34;example-1-filter-computer-by-operating-system-version&#34;&gt;Example 1: Filter Computer by Operating System Version&lt;/h2&gt;
&lt;p&gt;The AD attribute &lt;code&gt;OperatingSystemVersion&lt;/code&gt; holds the OS version with the build number in a format like this: &lt;code&gt;10.0 (19041)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Set PowerShell ConstrainedLanguage Mode per Group Policy</title>
      <link>https://diecknet.de/en/2023/05/20/powershell-constrainedlanguage-mode-per-gpo/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2023/05/20/powershell-constrainedlanguage-mode-per-gpo/</guid>
      <description>&lt;p&gt;PowerShell Language Modes are a way to restrict the functionality of PowerShell to increase the security of a system. Of course, this is only one small piece in a larger security strategy, so this alone is not sufficient protection for a system.&lt;/p&gt;
&lt;p&gt;At the same time, it&amp;rsquo;s also a double-edged sword:&lt;br&gt;
Advantage: we remove a powerful tool from potential attackers.&lt;br&gt;
Disadvantage: We as administrators can no longer use PowerShell properly on a system either.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automate Exchange Online with Azure Automation in 2024</title>
      <link>https://diecknet.de/en/2023/01/09/Exchange-Online-per-Azure-Automation/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2023/01/09/Exchange-Online-per-Azure-Automation/</guid>
      <description>&lt;p&gt;If you want to manage Exchange Online via Azure Automation, &lt;strong&gt;Managed Identities&lt;/strong&gt; is what you should use (this statement was last checked in June 2024).&lt;/p&gt;
&lt;h2 id=&#34;legacy-approach&#34;&gt;Legacy approach&lt;/h2&gt;
&lt;p&gt;In the past, RunAs Accounts or Plaintext Credentials (ðŸ¤¢) were also commonly used for this purpose, but this is now considered deprecated. RunAs accounts will be  discontinued by fall 2023. And I don&amp;rsquo;t have to say anything about plaintext passwords, do I?
You could still use App Registrations in Entra ID, but if you really just want to automate some Exchange settings via Azure Automation, it&amp;rsquo;s not really necessary.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Set Azure AD Connect Staging Mode via PowerShell</title>
      <link>https://diecknet.de/en/2022/07/21/Azure-AD-Connect-Staging-mode-PowerShell/</link>
      <pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2022/07/21/Azure-AD-Connect-Staging-mode-PowerShell/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a quick tip on howto enable or disable the Staging Mode in Azure AD Connect via PowerShell. Sadly there is no native Cmdlet in the style of &lt;code&gt;Set-ADSyncStagingMode&lt;/code&gt; or something like that.&lt;/p&gt;
&lt;p&gt;In this article I&amp;rsquo;ll first explain the approach and then later on list the full command block you can use. So feel free to skip below to the end of the post. The following PowerShell Cmdlets have to get executed on the Azure AD Connect Server.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange Server Setup Incomplete but fails to complete</title>
      <link>https://diecknet.de/en/2022/06/23/Exchange-Server-Setup-Incomplete-fail-stopping-services/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2022/06/23/Exchange-Server-Setup-Incomplete-fail-stopping-services/</guid>
      <description>&lt;p&gt;I had an issue with a broken Exchange Server 2016 CU23. Or rather it was not fully installed.
It was just a test environment, but I thought it would be useful or interesting to drill down on that issue.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll guide you through my troubleshooting steps / thought process.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://diecknet.de/images/2022/2022-06-22_Exchange_Server_Incomplete_Installation_Detected.png&#34; &gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://diecknet.de/images/2022/2022-06-22_Exchange_Server_Incomplete_Installation_Detected.png&#34; alt=&#34;Exchange Server 2016 CU23 Setup Assistant - Incomplete Installation Detected&#34;  title=&#34;Exchange Server 2016 CU23 Setup Assistant - Incomplete Installation Detected&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to remove all merged Git Branches on Windows</title>
      <link>https://diecknet.de/en/2022/06/21/Git-on-Windows-remove-all-merged-branches/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2022/06/21/Git-on-Windows-remove-all-merged-branches/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a quick tip on howto remove Git Branches that were already merged (thus not necessary to keep around anymore) locally on Windows, using PowerShell. Assuming that you do have Git for Windows installed. &lt;strong&gt;Execute these commands on your own risk.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;list-all-merged-branches&#34;&gt;List all merged branches&lt;/h2&gt;
&lt;p&gt;You can list all merged Git Branches by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    
    <item>
      <title>List all Users with administrative roles in a Microsoft 365 environment</title>
      <link>https://diecknet.de/en/2021/12/13/How-to-list-all-users-with-admin-roles-m365/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/12/13/How-to-list-all-users-with-admin-roles-m365/</guid>
      <description>&lt;h2 id=&#34;option-1-use-m365-admin-portal&#34;&gt;Option 1: Use M365 Admin Portal&lt;/h2&gt;
&lt;p&gt;There is finally a way in the main Microsoft 365 Admin Portal. Go to &lt;a href=&#34;https://admin.microsoft.com/Adminportal/Home?#/rbac/directory&#34; target=&#34;_blank&#34; &gt;&amp;ldquo;Roles&amp;rdquo; -&amp;gt; &amp;ldquo;Role assignments&amp;rdquo;&lt;/a&gt; and click on &amp;ldquo;Export admin list&amp;rdquo; to get a CSV file with all admins and their roles.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://diecknet.de/images/2023/2023-12-06_Export_m365_admin_role_assignments.jpg&#34; &gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://diecknet.de/images/2023/2023-12-06_Export_m365_admin_role_assignments.jpg&#34; alt=&#34;M365 Admin Center - role assignments&#34;  title=&#34;M365 Admin Center - role assignments&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;option-2-use-powershell--azure-ad-graph-module&#34;&gt;Option 2: Use PowerShell / Azure AD Graph Module&lt;/h2&gt;
&lt;p&gt;Just a short PowerShell snippet to list all users with administrative roles in a Microsoft 365 (or Azure AD) environment. Please note that this uses the older Azure AD Graph Module (already planned for deprecation). I don&amp;rsquo;t have an example code that uses the newer Microsoft Graph API &lt;strong&gt;yet&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>List all Microsoft Booking Calendars</title>
      <link>https://diecknet.de/en/2021/11/12/List-All-Microsoft-Booking-Mailboxes/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/11/12/List-All-Microsoft-Booking-Mailboxes/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re using Microsoft Booking in your Microsoft 365 Tenant, you might want to list all of the Booking calendars. Booking uses Exchange Online Mailboxes in the background. Every Booking Calendar has a corresponding Mailbox of the type &amp;ldquo;SchedulingMailbox&amp;rdquo;. If an user gets assigned &amp;ldquo;Administrator&amp;rdquo; for a Booking Calendar, they get &amp;ldquo;FullAccess&amp;rdquo; permissions for the Scheduling Mailbox.&lt;/p&gt;
&lt;h2 id=&#34;list-all-booking-calendars-with-permission&#34;&gt;List all Booking Calendars with permission&lt;/h2&gt;
&lt;p&gt;I wrote a PowerShell script to list all the Booking Mailboxes with the users that have access.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Verify Auto-Expanding Archives in Exchange Online</title>
      <link>https://diecknet.de/en/2021/11/04/Exchange-Online-Auto-Expanding-Archives/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/11/04/Exchange-Online-Auto-Expanding-Archives/</guid>
      <description>&lt;p&gt;If you have Auto-Expanding Archives for Exchange Online Mailboxes enabled, you might want to find out, if it actually provisions additional storage.&lt;/p&gt;
&lt;p&gt;In the Exchange Admin Center (EAC), open the info pane of the user&amp;rsquo;s mailbox. Click on &amp;ldquo;Manage mailbox archive&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://diecknet.de/images/2021/2021-11-04_Exchange_Online_Mailbox.png&#34; &gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://diecknet.de/images/2021/2021-11-04_Exchange_Online_Mailbox.png&#34; alt=&#34;Exchange Admin Center - Mailbox Pane&#34;  title=&#34;Exchange Admin Center - Mailbox Pane&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An Auto-Expanding Archive provisions more Archive storage space, if needed. Default Archives have 100 GB of storage available. If the archive is already bigger than 100 GB, we must have additional storage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using PowerShell Regular Expressions to match against filenames</title>
      <link>https://diecknet.de/en/2021/10/25/PowerShell-Regular-Expression/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/10/25/PowerShell-Regular-Expression/</guid>
      <description>&lt;p&gt;A short example for PowerShell Regular Expressions.&lt;/p&gt;
&lt;p&gt;Scenario: Match filenames like &lt;code&gt;ID1234_MyDocumentXYZ.pdf.lnk&lt;/code&gt;. We want go get the number after &lt;code&gt;ID&lt;/code&gt; and the rest of the filename between the underscore &lt;code&gt;_&lt;/code&gt; and the file extension &lt;code&gt;.lnk&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    
    <item>
      <title>Run PowerShell Script with Windows Task Scheduler</title>
      <link>https://diecknet.de/en/2021/10/13/PowerShell-Task-Scheduler/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/10/13/PowerShell-Task-Scheduler/</guid>
      <description>&lt;p&gt;More ore less quick note for myself - on how to run a PowerShell Script using Windows Task Scheduler.&lt;/p&gt;
&lt;h2 id=&#34;open-task-scheduler&#34;&gt;Open Task Scheduler&lt;/h2&gt;
&lt;p&gt;A quick way to open Task Scheduler:
&lt;!-- raw HTML omitted --&gt;WIN&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;R&lt;!-- raw HTML omitted --&gt;, then run &lt;code&gt;taskschd.msc&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-new-task&#34;&gt;Create New Task&lt;/h2&gt;
&lt;p&gt;Open &amp;ldquo;Task Scheduler Library&amp;rdquo; â†’ &amp;ldquo;Create New Task&amp;rdquo;.
Set all the self-explanatory options like Name, Description, User Account, Triggers, etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Retrieve the Timezone of a Sharepoint Online Site using PowerShell</title>
      <link>https://diecknet.de/en/2021/07/09/Sharepoint-Online-Timezones-by-PowerShell/</link>
      <pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/07/09/Sharepoint-Online-Timezones-by-PowerShell/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been looking for a way to retrieve the Timezone setting of a Sharepoint Online Site via PowerShell. Apparently there is not much good info publicly available. I looked for a way to use with the &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/sharepoint/sharepoint-online/connect-sharepoint-online?view=sharepoint-ps&#34; target=&#34;_blank&#34; &gt;standard SPO PowerShell module&lt;/a&gt; named Microsoft.Online.SharePoint.PowerShell.&lt;/p&gt;
&lt;p&gt;There are some infos online about using the PNPOnline Module, but that was not practical in my case. There are even some really annoying articles out, that claim to to provide a PowerShell way. But instead of retrieving the actual Timezone setting of a SPO site, they retrieve all available Timezones and then overwrite the current timezone with a valid one. Worst thing: They import Sharepoint .dll files, use plaintext authentication and use Client Context Object/CSOM (Microsoft.SharePoint.Client.ClientContext).
ðŸ˜µ Oof.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy an Azure NAT-Gateway for Azure Virtual Desktop by PowerShell</title>
      <link>https://diecknet.de/en/2021/06/27/Deploy-Azure-NAT-Gateway-Azure-Virtual-Desktop/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2021/06/27/Deploy-Azure-NAT-Gateway-Azure-Virtual-Desktop/</guid>
      <description>&lt;p&gt;I created a PowerShell script to automatically deploy an Azure NAT-Gateway into an Azure Virtual Desktop environment. That&amp;rsquo;s useful, if you to need one static IP-Address for your AVD machines. I created the script as a submission for the &lt;a href=&#34;https://getnerdio.com/nerdio-hackathon/&#34; target=&#34;_blank&#34; &gt;Nerdio Hackathon 2021&lt;/a&gt;. My first Hackathon attendance :^).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 2021-10-05&lt;/strong&gt; - I actually won first place, but apparently not many people participated in the contest. The Nerdio team are a bit disappointed, so they didn&amp;rsquo;t publish any announcements. Anyway I got a 1000 USD Amazon Gift Card ðŸ¤©.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Check NTFS Permissions using Powershell</title>
      <link>https://diecknet.de/en/2020/05/20/Check-NTFS-Permissions-Powershell/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2020/05/20/Check-NTFS-Permissions-Powershell/</guid>
      <description>&lt;p&gt;So I needed a quick way to check a few folders for correct permissions. We had Windows Virtual Desktop/FSLogix user profile containers in an Azure Files share. Some of these profile folders had wrong permissions.&lt;/p&gt;
&lt;p&gt;The correct storage permissions are:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;User Account&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Folder&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Permissions&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Users&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;This Folder Only&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Modify&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Creator / Owner&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Subfolders and Files Only&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Modify&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Administrator (optional)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;This Folder, Subfolders, and Files&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Full Control&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Official FSLogix documentation: &lt;a href=&#34;https://docs.microsoft.com/en-us/fslogix/fslogix-storage-config-ht&#34; target=&#34;_blank&#34; &gt;Configure storage permissions for use with Profile Containers and Office Containers&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange - When was that mailbox REALLY created?</title>
      <link>https://diecknet.de/en/2020/01/25/Exchange-Mailbox-Creation-Date/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2020/01/25/Exchange-Mailbox-Creation-Date/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re wondering when an Exchange mailbox got created, you will most likely stumble over the Active Directory user attribute &lt;code&gt;MSExchWhenMailboxCreated&lt;/code&gt;. You can get the value using PowerShell or ADUC with advanced features enabled.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#fff;background-color:#1f1f24;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d0a8ff&#34;&gt;Get-ADUser&lt;/span&gt; -Properties MSExchMaiboxWhenCreated
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://diecknet.de/images/2020/2020-01-25_MSExchWhenMailboxCreated_ADUC.png&#34; alt=&#34;Get MSExchWhenMailboxCreated attribute using PowerShell&#34;  title=&#34;Get MSExchWhenMailboxCreated attribute using Active Directory Users and Computers. Advanced features need to be enabled.&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange Room Mailbox - Set Permissions</title>
      <link>https://diecknet.de/en/2020/01/15/Exchange-Room-Mailbox-Standard-Permissions/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://diecknet.de/en/2020/01/15/Exchange-Room-Mailbox-Standard-Permissions/</guid>
      <description>&lt;p&gt;By default, the &amp;ldquo;Calendar&amp;rdquo; folder in Exchange 2013 Room Mailboxes has the &amp;ldquo;LimitedDetails&amp;rdquo; permission for the &amp;ldquo;Standard&amp;rdquo; security principal. Therefore, if no other permissions are configured, users cannot view details for appointments in this room. For better usability in Outlook, the &amp;ldquo;Reviewer&amp;rdquo; permission is more suitable. This allows items to be listed and details to be displayed. If required, the &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/module/exchange/mailboxes/set-calendarprocessing?view=exchange-ps&#34; target=&#34;_blank&#34; &gt;CalendarProcessing&lt;/a&gt; can be adjusted so that details such as the description and subject of the appointment are not saved in the room mailbox. Whether all this makes sense always depends on the environment.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
